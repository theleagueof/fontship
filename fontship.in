#!/usr/bin/env @PYTHON@

__version__ = "@VERSION@"

# This is inscruitable, but basically allows us to take advantage of automake
# knowing where system stuff is without having to process the source in two
# stages to get the final answer here. All this to know where on the system we
# are currently installed!
SRCDIR = "@datarootdir@/fontship/".replace("${prefix}", "@prefix@")

import sys
sys.path.append("@pythondir@/".replace("${prefix}", "@prefix@"))

import click
import fontship
import os.path
import subprocess

@click.group()
@click.version_option(__version__)
def fontship():
    """Execute any fontship supported subcommand COMMAND."""

@click.command()
@click.pass_context
@click.argument('target', nargs=-1)
def make(ctx, target):
    """Build specified target(s)."""
    args = ['make']
    args += ['-f', SRCDIR + 'rules.mk']
    for fname in ['GNUmakefile', 'makefile', 'Makefile']:
        if os.path.isfile(fname):
            args += ['-f', fname]
    process = subprocess.run(args + list(target))
    #, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
    process

fontship.add_command(make)

@click.command()
@click.pass_context
def setup(ctx):
    """Setup Fontship for use on a new Font project."""
    click.echo("Anybody want a penut")

fontship.add_command(setup)

@click.command()
@click.pass_context
def status(ctx):
    """Show information about setup and build status."""
    click.echo("No what?")

fontship.add_command(status)

if __name__ == '__main__':
    fontship()

# vim: ft=python
